package com.leo.rowe;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Calendar;
import java.util.Timer;

import com.feedback.NotificationType;
import com.feedback.UMFeedbackService;

import android.app.Service;
import android.app.WallpaperManager;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.widget.Toast;

public class changeWallpaperService extends Service{

	WallpaperManager wm;
	Handler h;
	Runnable r;
	Calendar c;
	XMLPullHandler xmlPullHandler;
	String weather;
	URL url;
	int wallpaperAddress;
	SharedPreferences conf;
	SharedPreferences.Editor editor;
	int hour;
	int longitude=0,
		latitude=0;

	
	 Bundle b=new Bundle() ;
	
	public void onCreate(){
		super.onCreate();
		c=Calendar.getInstance();		
		System.out.println("Service have been launched!");
		wm=WallpaperManager.getInstance(this);
		h=new Handler();
		System.out.println("conf information:------------->");
		conf=getSharedPreferences("conf", MODE_PRIVATE); //initial conf.xml
		System.out.println("way: "+conf.getString("way", null));
		System.out.println("longitude: "+conf.getInt("longitude", 0));
		System.out.println("latitude: "+conf.getInt("latitude", 0));
		System.out.println("refreshtime: "+conf.getInt("refreshtime", 0));
		System.out.println("city: "+conf.getString("city", null));
		hour=c.get(c.HOUR_OF_DAY);
		System.out.println("hour "+hour);
		// Put elements to the map 
		
			//fog
			b.putInt("Fog", R.drawable.fog);
			//rain
			b.putInt("Rain",R.drawable.rain);
			b.putInt("Light rain",R.drawable.rain);
			b.putInt("Rain",R.drawable.rain);
			b.putInt("Thunderstorm",R.drawable.rain);
			//sun
			b.putInt("Clear", R.drawable.sunny);
			
			//cloud
			b.putInt("Mostly Cloudy", R.drawable.overcast);
			b.putInt("Partly Cloudy", R.drawable.overcast);
			b.putInt("Cloudy", R.drawable.overcast);
			b.putInt("Mostly Cloudy", R.drawable.overcast);
			b.putInt("Overcast", R.drawable.overcast);
		
			
			
	}

	
	
	
	
	public void onStart(Intent intent,int startId){
		super.onStart(intent, startId);
		
		//write in SharePointFile
//	if(hour>=17&&hour<19){	
//		try {
//			wm.setResource(R.drawable.night);
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//	}
//	else if(hour>=19||hour<=5){
//		try {
//			wm.setResource(R.drawable.midnight);
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//	}
//	else
		if(judgeNetwork()){	
		//try to get the weather which in user location
		try {
			 UMFeedbackService.enableNewReplyNotification(this, NotificationType.NotificationBar);//反馈提醒
			String requestUrlStyle=conf.getString("way", "city");
			if(requestUrlStyle.equals("lola")){
				// url = new URL("http://www.google.com/ig/api?hl=en&weather=,,,30107204,10401999");
			//	System.out.println(requestUrlStyle);
				latitude=conf.getInt("latitude", 30107204);
				longitude=conf.getInt("longitude", 10401999);
				url = new URL("http://www.google.com/ig/api?hl=en&weather=,,,"+String.valueOf(latitude)+","+String.valueOf(longitude));
			}	
			else{
				url = new URL("http://www.google.com/ig/api?hl=en&weather="+conf.getString("city", "beijing"));
			}
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("Erroe hanppen in construct the URL"+e);
		}		
		xmlPullHandler=new XMLPullHandler(url);
		weather=xmlPullHandler.getWeather();
		
		 if(weather!=null) 
			System.out.println("weather:  "+weather);
		 else
			 System.out.println("get Weather fail!");
		
		
		//get the address of the pic which automatically general by android.
		if(b.get(weather)!=null){
			/*
			 * fix bugs:if can't find the weather condition.
			 */
			wallpaperAddress=b.getInt(weather);
		
		
		//set the wallpaper
			try {
				wm.setResource(wallpaperAddress);
				Toast.makeText(changeWallpaperService.this, "开始根据天气切换桌面壁纸",
						Toast.LENGTH_SHORT).show();		  
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		
	}
		
		
		
}
		
	
	
	public void onDestory(){
		
	}
	@Override
	public IBinder onBind(Intent intent) {
		// TODO Auto-generated method stub
		return null;
	}
	
	
	 public boolean judgeNetwork(){
	    	ConnectivityManager cwjManager=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);   
	    	NetworkInfo info = cwjManager.getActiveNetworkInfo();   
	    	if (info != null && info.isAvailable()){   
	    	//do  
	    		return true;
	    	}   
	    	else  
	    	{  
	    		System.out.println("there is no network!");
	    		return false;
	    	}  
	    }
	

}
//h.post(r);
//r=new Runnable() {	
//	@Override
//	public void run() {
//		// TODO Auto-generated method stub
//		System.out.println("hello ");
//		if(i>3)
//			i=i%3;
//		
//		System.out.println("i:  "+i);
//		h.postDelayed(r, 3000);
//		try {
//			System.out.println((int)hm.get(String.valueOf(i)).hashCode());
//		//	wm.setResource(R.drawable.fog);
//			wm.setResource(Integer.parseInt(hm.get(String.valueOf(i)).toString()));
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		i++;
//	}
//};
//
//super.onStart(intent, startId);
//System.out.println("onStart!");
//
//