package com.leo.rowe;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Calendar;
import java.util.Timer;

import com.feedback.NotificationType;
import com.feedback.UMFeedbackService;

import android.app.Service;
import android.app.WallpaperManager;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.widget.Toast;

public class changeWallpaperService extends Service{

	WallpaperManager wm;
	Handler h;
	Runnable r;
	Calendar c;
	XMLPullHandler xmlPullHandler;
	String weather;
	URL url;
	int wallpaperAddress;
	SharedPreferences conf;
	SharedPreferences.Editor editor;
	int hour;
	int longitude=0,
		latitude=0;

	
	 Bundle b=new Bundle() ;
	
	public void onCreate(){
		super.onCreate();
		c=Calendar.getInstance();		
		System.out.println("Service have been launched!");
		wm=WallpaperManager.getInstance(this);
		h=new Handler();
		conf=getSharedPreferences("conf", MODE_PRIVATE); //initial conf.xml
		hour=c.get(Calendar.HOUR_OF_DAY);
		System.out.println("hour "+hour);
		// Put elements to the map 
		
			//fog
			b.putInt("Fog", R.drawable.fog);
			//rain
			b.putInt("Rain",R.drawable.rain);
			b.putInt("Light rain",R.drawable.rain);
			b.putInt("Rain",R.drawable.rain);
			b.putInt("Thunderstorm",R.drawable.rain);
			b.putInt("Drizzle", R.drawable.rain);//Version 0.2 11.12.2011
			//sun
			b.putInt("Clear", R.drawable.sun);
			
			//cloud
			b.putInt("Mostly Cloudy", R.drawable.overcast);
			b.putInt("Partly Cloudy",R.drawable.partlycloud);
			b.putInt("Cloudy", R.drawable.overcast);
			b.putInt("Overcast", R.drawable.overcast);	
			
			//snow
			b.putInt("Snow",R.drawable.snow);
	}
	public void onStart(Intent intent,int startId){
		super.onStart(intent, startId);
		//write in SharePointFile
		
	if(hour==17){	
		try {
			wm.setResource(R.drawable.nightfall);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	else if (hour==18){
		try {
			System.out.println("hour:"+hour);
			wm.setResource(R.drawable.night);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	else if(hour>=19||hour<=5){
		try {
			wm.setResource(R.drawable.midnight);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	else if(judgeNetwork()){	
		//try to get the weather which in user location
		try {
			 UMFeedbackService.enableNewReplyNotification(this, NotificationType.NotificationBar);
				url = new URL("http://www.google.com/ig/api?hl=en&weather="+conf.getString("city", "beijing"));
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
		xmlPullHandler=new XMLPullHandler(url);
		weather=xmlPullHandler.getWeather();
		if(b.get(weather)!=null){
			wallpaperAddress=b.getInt(weather);
		
		
			try {
				wm.setResource(wallpaperAddress);
				  
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		
	}
		
		
		
}
		
	
	
	public void onDestory(){
		
	}
	@Override
	public IBinder onBind(Intent intent) {
		// TODO Auto-generated method stub
		return null;
	}
	
	
	 public boolean judgeNetwork(){
	    	ConnectivityManager cwjManager=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);   
	    	NetworkInfo info = cwjManager.getActiveNetworkInfo();   
	    	if (info != null && info.isAvailable()){   
	    		return true;
	    	}   
	    	else  
	    	{  
	    		System.out.println("there is no network!");
	    		return false;
	    	}  
	    }
	

}
