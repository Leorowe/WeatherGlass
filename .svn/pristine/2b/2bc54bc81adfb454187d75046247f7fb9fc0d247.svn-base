package com.leo.rowe;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Calendar;

import android.app.Activity;
import android.app.AlarmManager;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.PendingIntent;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.os.Handler;
import android.text.InputType;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.feedback.NotificationType;
import com.feedback.UMFeedbackService;
import com.mobclick.android.MobclickAgent;

public class Weather4WallpaperActivity extends Activity {
    /** Called when the activity is first created. */
	  Handler h;
	 Runnable r;
	 private Calendar c=null;
	 private final static int HOUR=3600;
	 SharedPreferences conf;
	 SharedPreferences.Editor editor;
	 int latitude;
	 int longitude;
	 URL url = null;
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        MobclickAgent.onError(this);//http://www.umeng.com/doc/home.html#adsdk_syzn
        MobclickAgent.update(this);//check update
        UMFeedbackService.enableNewReplyNotification(this, NotificationType.NotificationBar);//反馈提醒
        MobclickAgent.updateOnlineConfig(this);//发送策略
		c=Calendar.getInstance();
        //general a config file to store status
        conf=getSharedPreferences("conf", MODE_PRIVATE);
        
        
        
        Button stopHandlerBt=(Button)findViewById(R.id.StopHandler);
        stopHandlerBt.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
//				editor.putBoolean("run", true);
                Intent intent = new Intent(Weather4WallpaperActivity.this,alarmReceiver.class);  
                PendingIntent pi = PendingIntent.getBroadcast(Weather4WallpaperActivity.this, 0, intent, 0);  
                AlarmManager am = (AlarmManager) getSystemService(Activity.ALARM_SERVICE);  
                am.cancel(pi);  
				
			}
		});
        
        Button startBt=(Button)findViewById(R.id.changeWallpaper);
        startBt.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				System.out.println("ChangeWeather have been click!");
          		System.out.println("conf information:------------->");
        		conf=getSharedPreferences("conf", MODE_PRIVATE); //initial conf.xml
        		System.out.println("way: "+conf.getString("way", null));
        		System.out.println("longitude: "+conf.getInt("longitude", 0));
        		System.out.println("latitude: "+conf.getInt("latitude", 0));
        		System.out.println("refreshtime: "+conf.getInt("refreshtime", 0));
        		System.out.println("city: "+conf.getString("city", null));
        		
				Intent intent1=new Intent(Weather4WallpaperActivity.this,alarmReceiver.class);
				//which class will get the broadcast
		                  // TODO Auto-generated method stub  
							
		                  c.setTimeInMillis(System.currentTimeMillis());  //从1970,1,1后走过的毫秒
		                  PendingIntent pi = PendingIntent.getBroadcast(Weather4WallpaperActivity.this, 0, intent1, 0);  
		                  AlarmManager am = (AlarmManager) getSystemService(Activity.ALARM_SERVICE);  
		                  am.set(AlarmManager.RTC_WAKEUP, c.getTimeInMillis(), pi);//设置闹钟  
		                //  am.setRepeating(AlarmManager.RTC_WAKEUP, c.getTimeInMillis(), (10*1000), pi);//重复设置 
		                 am.setRepeating(AlarmManager.RTC_WAKEUP, c.getTimeInMillis(), (conf.getInt("refreshtime", 1)*HOUR*1000), pi);//重复设置 
		                  System.out.println("alarm have been set! Refresh Time" +conf.getInt("refreshtime", 1));
		                  
		          	
		        		
		        		

			}
		});
        
        //GeoButton
        Button getBt=(Button)findViewById(R.id.getlocation);
        getBt.setOnClickListener(new OnClickListener() {
        	
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				if(judgeNetwork()){
					
					
					
					final EditText cityName=new EditText(Weather4WallpaperActivity.this);
			        android.content.DialogInterface.OnClickListener cal = new DialogInterface.OnClickListener() {			
					 
			    		@Override
			    		public void onClick(DialogInterface dialog, int which) {
			    			switch (which) {
			    			case Dialog.BUTTON_NEGATIVE:
			    				Toast.makeText(Weather4WallpaperActivity.this, R.string.nolocate,
			    						Toast.LENGTH_SHORT).show();		  
			    			
			    				
			    				break;
			    			case Dialog.BUTTON_POSITIVE://when users click submit	    				
			    				
			    				
			    				
			    				//http://www.google.com/ig/api?weather=Beijing&hl=en
			    				
			    				try {
			    					url = new URL("http://www.google.com/ig/api?hl=en&weather="+cityName.getText().toString());
			    				} catch (MalformedURLException e1) {
			    					// TODO Auto-generated catch block
			    					e1.printStackTrace();
			    				}
			    				//test with Vaasa latitude and longitude
			    				XMLPullHandler xpp=new XMLPullHandler(url);
			    				String weatherCondition=xpp.getWeather();//don't call xpp.getWeather so many times
			    				if(weatherCondition!=null&&(weatherCondition.length()!=0)){
			    					System.out.println(weatherCondition);
			    					//write the Latitude and Longitude in conf
			    					editor=conf.edit();
			    					editor.putString("city", cityName.getText().toString());
			    					editor.putString("way", "city");
			    					editor.commit();
			    					Toast.makeText(Weather4WallpaperActivity.this, "Now "+cityName.getText().toString()+" weather is "+weatherCondition,
				    						Toast.LENGTH_SHORT).show();
			    				}
			    				else
			    					Toast.makeText(Weather4WallpaperActivity.this,R.string.nolocate,
				    						Toast.LENGTH_SHORT).show();
		    			    	break;
			    			}
			    		}
			    	};
			    	//show a dialog let the user input city when the location is no available
			        new AlertDialog.Builder(Weather4WallpaperActivity.this)
			            .setTitle(R.string.cityNameDialog).setView(cityName)
			        	.setPositiveButton(R.string.submit, cal)
			            .setNegativeButton(R.string.cancel, cal).show();	
			    	
				}
			}
//			    	
//					Toast.makeText(Weather4WallpaperActivity.this,"正在查找你的位置",Toast.LENGTH_SHORT).show();
//				LocationManager lm=(LocationManager)Weather4WallpaperActivity.this.getSystemService(Context.LOCATION_SERVICE);
//				Location ls=lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
//			//	Location ls=lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);
//				if(ls!=null)		
//			    	System.out.println("last time location latitude is : "+ls.getLatitude()+"  Longitude is :"+ls.getLongitude());
//			//	lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, new getLocation());
//				lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, new getLocation());
//				}
//				else
//					Toast.makeText(Weather4WallpaperActivity.this,R.string.openNetwork,Toast.LENGTH_LONG).show();	
//			}
		});
        
        //set Refresh Time Button
        Button setRefreshTimeBt=(Button)findViewById(R.id.setRefreshTime);
        setRefreshTimeBt.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				final EditText EtRefreshTime=new EditText(Weather4WallpaperActivity.this);
				//set Input keyboard type.
				EtRefreshTime.setInputType(InputType.TYPE_CLASS_NUMBER);
				EtRefreshTime.setHint(R.string.implySetTime);
				//EtRefreshTime.setHint("please input refresh Time(/hour)");
	        	android.content.DialogInterface.OnClickListener setRefreshtimeDialog = new DialogInterface.OnClickListener() {			
					 
		    		@Override
		    		public void onClick(DialogInterface dialog, int which) {
		    			switch (which) {
		    			case Dialog.BUTTON_NEGATIVE:
		    				Toast.makeText(Weather4WallpaperActivity.this,R.string.noTime,
		    						Toast.LENGTH_LONG).show();		  
		    				break;
		    			case Dialog.BUTTON_POSITIVE://when users click submit	    				
		    				//test with Vaasa latitude and longitude
		    				String time=EtRefreshTime.getText().toString();
		    				if(time!=null&&time.length()!=0){
		    					editor=conf.edit();
		    					editor.putInt("refreshtime", Integer.parseInt(EtRefreshTime.getText().toString()));
		    					editor.commit();
		    					Toast.makeText(Weather4WallpaperActivity.this, "Every "+EtRefreshTime.getText().toString()+"  hours, "+"Wallpaper will comunicate with Weather",
			    						Toast.LENGTH_LONG).show();
		    				}else{
		    					Toast.makeText(Weather4WallpaperActivity.this,R.string.noTime,
			    						Toast.LENGTH_LONG).show();	    					
		    				}
		    					
		    					break;
		    			}
		    		}
		    	};
		    	
				   new AlertDialog.Builder(Weather4WallpaperActivity.this)
		            .setTitle(R.string.DialogTimeTitle).setView(EtRefreshTime)
		        	.setPositiveButton(R.string.submit, setRefreshtimeDialog)
		            .setNegativeButton(R.string.cancel, setRefreshtimeDialog).show();			
				
			}
		});
        
        //input CityName
//        final EditText cityNameEt=(EditText)findViewById(R.id.cityName);
//        Button checkCityBt=(Button)findViewById(R.id.checkCityBt);
//        checkCityBt.setOnClickListener(new OnClickListener() {
//			
//			@Override
//			public void onClick(View v) {
//				// TODO Auto-generated method stub
//				  cityName=cityNameEt.getText().toString();
//			        System.out.println("get cityName!"+cityName);		    	
//					try {
//						//http://www.google.com/ig/api?weather=Beijing
//						url = new URL("http://www.google.com/ig/api?weather="+cityName);
//					} catch (MalformedURLException e1) {
//						// TODO Auto-generated catch block
//						e1.printStackTrace();
//					}
//					//test with Vaasa latitude and longitude
//					XMLPullHandler xpp=new XMLPullHandler(url);
//					if(xpp.getWeather()!=null&&(xpp.getWeather().length()!=0)){
////						System.out.println(xpp.getWeather());
//						//write the Latitude and Longitude in conf
//						editor=conf.edit();
//						editor.putString("city", cityName);
//						editor.commit();
//					}				
//					else{
//						//can't find user city So users have to input the city name by themselves
//						System.out.println("null!!");
//						Toast.makeText(Weather4WallpaperActivity.this, R.string.nolocate , Toast.LENGTH_LONG).show();
//					}
//						
//			}
//		});
      
        
     
}

//    private  class getLocation implements LocationListener{
//
//		@Override
//		public void onLocationChanged(Location location) {
//			// TODO Auto-generated method stub
//			//fix bug when latitude or longitude greater than 100,no xml will return.
////			System.out.println("the row data is :");
////			double Flatitude=location.getLatitude();
////			double  Flongitude=location.getLongitude();
////			System.out.println("The longitude is "+Flatitude);
////			System.out.println("the latitude is "+Flongitude);
////			System.out.println("dealing ........");
//				 latitude=(int)(location.getLatitude()*1000000);
//				 longitude=(int)(location.getLongitude()*1000000);
//			System.out.println("The latitude is "+latitude);
//			System.out.println("the longitude is "+longitude);
//			Toast.makeText(Weather4WallpaperActivity.this,"已经找到你的位置",
//					Toast.LENGTH_SHORT).show();
//			
//			try {
//				//url = new URL("http://www.google.com/ig/api?hl=en&weather=,,,63107204,21651467");
//				//url = new URL("http://www.google.com/ig/api?hl=en&weather=,,,"+String.valueOf(longitude)+","+String.valueOf(latitude));
//				//System.out.println("http://www.google.com/ig/api?hl=en&weather=,,,"+String.valueOf(latitude)+","+String.valueOf(longitude));
//				url = new URL("http://www.google.com/ig/api?hl=en&weather=,,,"+String.valueOf(latitude)+","+String.valueOf(longitude));
//			} catch (MalformedURLException e1) {
//				// TODO Auto-generated catch block
//				e1.printStackTrace();
//			}
//			//test with Vaasa latitude and longitude
//			XMLPullHandler xpp=new XMLPullHandler(url);
//			String weather=xpp.getWeather();
//			weather=null;
//			if(weather!=null&&(weather.length()!=0)){
//				//System.out.println(xpp.getWeather());
//				//write the Latitude and Longitude in conf
//				editor=conf.edit();
//				editor.putInt("longitude", longitude);
//				editor.putInt("latitude", latitude);
//				editor.putString("way", "lola");
//				editor.commit();
////				Toast.makeText(Weather4WallpaperActivity.this,R.string.findPosition,
////						Toast.LENGTH_SHORT).show();
//				
//			}				
//			else{
//				//can't find user city So users have to input the city name by themselves
//				final EditText cityName=new EditText(Weather4WallpaperActivity.this);
//		        android.content.DialogInterface.OnClickListener cal = new DialogInterface.OnClickListener() {			
//				 
//		    		@Override
//		    		public void onClick(DialogInterface dialog, int which) {
//		    			switch (which) {
//		    			case Dialog.BUTTON_NEGATIVE:
//		    				Toast.makeText(Weather4WallpaperActivity.this, R.string.nolocate,
//		    						Toast.LENGTH_SHORT).show();		  
//		    			
//		    				
//		    				break;
//		    			case Dialog.BUTTON_POSITIVE://when users click submit	    				
//		    				
//		    				
//		    				
//		    				//http://www.google.com/ig/api?weather=Beijing&hl=en
//		    				
//		    				try {
//		    					url = new URL("http://www.google.com/ig/api?hl=en&weather="+cityName.getText().toString());
//		    				} catch (MalformedURLException e1) {
//		    					// TODO Auto-generated catch block
//		    					e1.printStackTrace();
//		    				}
//		    				//test with Vaasa latitude and longitude
//		    				XMLPullHandler xpp=new XMLPullHandler(url);
//		    				String weatherCondition=xpp.getWeather();//don't call xpp.getWeather so many times
//		    				if(weatherCondition!=null&&(weatherCondition.length()!=0)){
//		    					System.out.println(weatherCondition);
//		    					//write the Latitude and Longitude in conf
//		    					editor=conf.edit();
//		    					editor.putString("city", cityName.getText().toString());
//		    					editor.putString("way", "city");
//		    					editor.commit();
//		    					Toast.makeText(Weather4WallpaperActivity.this, "Now "+cityName.getText().toString()+" weather is "+weatherCondition,
//			    						Toast.LENGTH_SHORT).show();
//		    				}
//		    				else
//		    					Toast.makeText(Weather4WallpaperActivity.this,R.string.nolocate,
//			    						Toast.LENGTH_SHORT).show();
//	    			    	break;
//		    			}
//		    		}
//		    	};
//		    	if(!conf.getString("city", "beijing").equals("beijing"))
//		    	//show a dialog let the user input city when the location is no available
//		        new AlertDialog.Builder(Weather4WallpaperActivity.this)
//		            .setTitle(R.string.cityNameDialog).setView(cityName)
//		        	.setPositiveButton(R.string.submit, cal)
//		            .setNegativeButton(R.string.cancel, cal).show();				    
//			}
//				
//			
//		}
//
//		@Override
//		public void onProviderDisabled(String provider) {
//			// TODO Auto-generated method stub
//			
//		}
//
//		@Override
//		public void onProviderEnabled(String provider) {
//			// TODO Auto-generated method stub
//			
//		}
//
//		@Override
//		public void onStatusChanged(String provider, int status, Bundle extras) {
//			// TODO Auto-generated method stub
//			
//		}
//    	
//    }
    
    public boolean judgeNetwork(){
    	ConnectivityManager cwjManager=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);   
    	NetworkInfo info = cwjManager.getActiveNetworkInfo();   
    	if (info != null && info.isAvailable()){   
    	//do  
    		return true;
    	}   
    	else  
    	{  
    		System.out.println("there is no network!");
    		return false;
    	}  
    }
    
    public void onResume(){
    	super.onResume();
    	 MobclickAgent.onResume(this);   //http:http://www.umeng.com/doc/home.html#adsdk_syzn
    	
    }
    public void onPause(){
    	super.onPause();
    	MobclickAgent.onPause(this);   ////http:http://www.umeng.com/doc/home.html#adsdk_syzn
    }
    public void onDestory(){
    	super.onDestroy();
    }
    
    public boolean onCreateOptionsMenu(Menu menu) {
        //一般可以在OptionsMenu中添加一个Item,用于作为反馈界面的入口
    menu.add(0, 0, 0, "feedback"); 
    menu.add(0,1,0,"Exit");
   // ...
    return true;
    }
     
    public boolean onOptionsItemSelected(MenuItem item) {
    switch (item.getItemId()) {
           case 0: 
             // 调用反馈提供的接口，进入反馈界面       
        	   	UMFeedbackService.openUmengFeedbackSDK(this);
    			return true;
           case 1:
        	    this.finish();
        	    return true;
           default:
        	   return true;
     //     ...
     }
     }

}
   
   
    
	
    
    
    
//    private void initLocation(Context mContext){  
//        //获得系统及服务的  LocationManager 对象  这个代码就这么写 不用考虑  
//        lm = (LocationManager) mContext.getSystemService(Context.LOCATION_SERVICE);  
//          
//        //首先检测 通过network 能否获得location对象  
//        //如果获得了location对象 则更新tv  
//        if (startLocation(networkProvider,mContext)) {  
//            updateLocation(location,mContext);  
//        }else   
//            //通过gps 能否获得location对象  
//            //如果获得了location对象 则更新tv  
//            if(startLocation(GpsProvider,mContext)){  
//            updateLocation(location,mContext);  
//        }else{  
//            //如果上面两种方法都不能获得location对象 则显示下列信息  
//            Toast.makeText(this, "没有打开GPS设备", 5000).show();  
//        }  
//    }
